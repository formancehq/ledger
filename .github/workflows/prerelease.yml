on:
  push:
    branches:
      - prerelease
name: Pre-release
jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "eu-west-1"
      AWS_ECS_CLUSTER: "numary-preprod-ecs"
      ECR_REPOSITORY: numary-preprod-ecr
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - uses: actions/checkout@v2
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://altitude:${TOKEN}@github.com".insteadOf "https://github.com"
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: get deps
        run: CGO_ENABLED=1 go get
      - name: fetch numary control
        run: make fetch-control
      - name: prepare goreleaser
        run: cp .github/.goreleaser.linux.yml .goreleaser.yml
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: build --parallelism 4 --rm-dist --skip-validate --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t ledger .
          docker tag ledger $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag ledger $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - name: Deploy new version in ECS
        run: |
          pip install ecs-deploy boto3
          python .github/deploy_ecs_service.py $AWS_ECS_CLUSTER $IMAGE_TAG