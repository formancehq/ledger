name: release
on:
  release:
    types: [prereleased, released]
permissions:
  contents: write
jobs:
  build_control:
    name: 'Build Control'
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release of Numary/Control
        uses: rez0n/actions-github-release@main
        id: control_release
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: "numary/control"
          type: "stable"
      - run: curl -OL ${{ steps.control_release.outputs.browser_download_url }}
      - run: tar -zxvf numary-control-${{ steps.control_release.outputs.release }}.tar.gz
      - run: rm -rf numary-control-${{ steps.control_release.outputs.release }}.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: control-dist
          path: ./**
  build_binary:
    name: 'Build Binary'
    needs:
      - build_control
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: fetch numary control
        uses: actions/download-artifact@v2
        with:
          name: control-dist
          path: cmd/control/
      - name: OSXCross for CGO Support
        run: |
          mkdir ../../osxcross
          git clone https://github.com/plentico/osxcross-target.git ../../osxcross/target
      - name: Downgrade libssl
        run: |
          echo 'deb http://security.ubuntu.com/ubuntu bionic-security main' | sudo tee -a /etc/apt/sources.list
          sudo apt update && apt-cache policy libssl1.0-dev
          sudo apt-get install libssl1.0-dev
      - run: sudo apt install gcc-mingw-w64 -y
      - name: Run GoReleaser
        env:
          GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
          SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY_OSS }}
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --parallelism 4 --rm-dist --skip-validate
  build_docker:
    name: 'Build & Publish Docker'
    runs-on: ubuntu-latest
    needs:
      - build_control
    steps:
      - uses: actions/checkout@v2
      - name: fetch numary control
        uses: actions/download-artifact@v2
        with:
          name: control-dist
          path: cmd/control/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: actions/cache@v3
        with:
          path: /root/.cache/
          key: ${{ runner.os }}-go-build
      - uses: actions/cache@v3
        with:
          path: /go/pkg
          key: ${{ runner.os }}-go-pkg
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: "NumaryBot"
          password: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/numary/ledger:latest,ghcr.io/numary/ledger:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
            SEGMENT_WRITE_KEY=${{ secrets.SEGMENT_WRITE_KEY_OSS }}
  sdk:
    name: 'Generate SDK'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sdk/
    strategy:
      matrix:
        sdk: [ go, php, python, typescript-node ]
    needs:
      - build_docker
      - build_binary
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
          repository: numary/numary-sdk-${{ matrix.sdk }}
          path: sdks/${{ matrix.sdk }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Launch Generate
        run: task generate VERSION=${{ github.event.release.tag_name }}  -- ${{ matrix.sdk }}
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Upgrade Release to ${{ github.event.release.tag_name }}
          tagging_message: ${{ github.event.release.tag_name }}
          repository: ./sdk/sdks/${{ matrix.sdk }}
          commit_user_name: NumaryBot
          commit_user_email: support@numary.com%
